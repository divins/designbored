
#threed_inventory
  #effect-container
    -15.times do 
      .transform
        a href='#'
          i.icon-map-marker

  #css

  javascript:
    $(function(){
      var row           = 0,
          column        = 0,
          rotation      = 0,
          reset_counter = 1;

      $.each($('.transform'), function(index, element){
        if(reset_counter > 5){
          column = 0
          row++
          reset_counter = 1
        }

        var el = $(element)
        el.css('left', posX(column));
        el.css('top', posY(row, column));
        el.css('-webkit-transform', transformation(row, column));

        column++
        reset_counter++
      });
    });

    function posX(column){
      return 75*column;
    }

    function posY(row, column){
      var offset = 0;
      if(column == 0 || column == 4){ offset = 20; }
      if(column == 1 || column == 3){ offset = 10; }

      return (75*row)+offset;
    }

    function transformation(row, column){
      var rotateY = 0;
      var translateZ = 0;
      if(column == 0){ rotateY = 5;  translateZ = 30; }
      if(column == 1){ rotateY = 3;   translateZ = 20; }
      if(column == 2){ rotateY = 0;   translateZ = 5; }
      if(column == 3){ rotateY = -3;  translateZ = 20; }
      if(column == 4){ rotateY = -5; translateZ = 30; }

      rotation = 'rotateY(' + rotateY + 'deg)',
      translation = 'translate3d(0px, 0px, ' + translateZ + 'px)',
      props = [rotation, translation].join(' ');
      return props;
    }

    var elements    = $('.transform'),
        css         = document.getElementById('css'),
        width       = elements[0].clientWidth,
        height      = elements[0].clientHeight,
        rotateX     = 0,
        rotateY     = 0,
        isDown      = false,
        reverse     = false,
        lastX       ,
        lastY       ;

    document.addEventListener('mousemove', function(e) {
        if(lastX == undefined){lastX = e.clientX;}
        if(lastY == undefined){lastY = e.clientY;}

        xMultiplier = 180 / height;
        yMultiplier = 180 / width;
        rotateX += (lastY - e.clientY) * xMultiplier;
        rotateY += (lastX - e.clientX) * yMultiplier * (reverse ? 1 : -1);
        rotateX = capRotation(rotateX, 50);
        rotateY = capRotation(rotateY, 100);
        rotateX  = Math.floor(rotateX % 360);
        rotateY  = Math.floor(rotateY % 360);
        reverse  = Math.abs(Math.floor(rotateX / 90) % 4) > 1;
        lastX    = e.clientX;
        lastY    = e.clientY;
        /*updateTransform();*/

        var perspectiveOrigin = rotateY+'% '+rotateX+'%';
        $('#effect-container')[0].style['-webkit-perspective-origin'] = perspectiveOrigin;
        css.innerText = perspectiveOrigin;
    }, false);

    function capRotation(rotation, cap){
      var rotation;
      if(rotation >= cap+100){ rotation = cap+100 }
      if(rotation <= -cap){ rotation = -cap }
      return rotation;
    }
