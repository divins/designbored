#percent-icon
  h3 
    span Percent icon
    a href='http://designbored.herokuapp.com/#percent-icon' [ Link ]
  p.description Icon with a cool outline that represents a percentage
  p.idea-from
    span This concept comes from 
    a href='http://www.pinterest.com/marcdivc/ui/' target='_blank' Check my Pinterest UI board

  h4 Demo
  .demo
    .container
      .separator
        input.percent-selector type='range' min='0' max='100' value='0'
        .cool-percent-icon
          .moar-outter-shadow
          .outer-shadow
          canvas width="100" height="100"
          .icon
            i.icon-dropbox

      .separator
        input.percent-selector type='range' min='0' max='100' value='0'
        .cool-percent-icon
          .moar-outter-shadow
          .outer-shadow
          canvas width="100" height="100"
          .icon
            span 0%

    javascript:
      function calculateAngle(percent){
        return (360*percent)/100
      }

      $('.percent-selector').change(function(){
        selector = $(this)
        percent = selector.val()

        canvas = selector.next().children('canvas')[0]
        icon = selector.next().children('.icon').children('span')
        $(icon).text(percent + '%')

        letsDraw(canvas, calculateAngle(percent));
      });

      var colors = ["#FFDAB9"];

      function drawSegment(canvas, context, angle) {
        context.save();
        var centerX = Math.floor(canvas.width / 2);
        var centerY = Math.floor(canvas.height / 2);
        radius = Math.floor(canvas.width / 2);

        var startingAngle = degreesToRadians(-90);
        var arcSize = degreesToRadians(angle);
        var endingAngle = startingAngle + arcSize;

        context.beginPath();
        context.moveTo(centerX, centerY);
        context.arc(centerX, centerY, radius, 
                    startingAngle, endingAngle, false);
        context.closePath();

        context.fillStyle = 'orange'
        context.fill();

        context.restore();
      }
      
      function degreesToRadians(degrees) {
        return (degrees * Math.PI)/180;
      }
      function sumTo(a, i) {
          var sum = 0;
          for (var j = 0; j < i; j++) {
            sum += a[j];
          }
          return sum;
      }

      function letsDraw(canvas, angle){
        context = canvas.getContext("2d");
        context.clearRect(0,0,400,400)
        drawSegment(canvas, context, angle);
      }

.source-code
  button class='source-code' Source code
  .code
    .comments
      p
.references
  button class='code-references' Code references
  ul
    li
      a href='http://atomicnoggin.ca/blog/2013/01/26/css3-pie-charts-revisited/' http://atomicnoggin.ca/blog/2013/01/26/css3-pie-charts-revisited
    li
      a href='https://github.com/KrisOlszewski/donut-chart' https://github.com/KrisOlszewski/donut-chart
    li
      a href='http://wickedlysmart.com/how-to-make-a-pie-chart-with-html5s-canvas/' http://wickedlysmart.com/how-to-make-a-pie-chart-with-html5s-canvas/
